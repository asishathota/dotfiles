sudo apt install unzip
sudo apt install snap
sudo apt install curl
sudo apt install ripgrep
sudo apt install htop gzip fzf fd-find build-essential
sudo apt install pdffonts
sudo apt install poppler-utils
pdffonts /mnt/c/Users/asish/OneDrive/Desktop/Resume\ \(1\).pdf
pdffonts /mnt/c/Users/asish/OneDrive/Desktop/Resume.pdf
pdffonts Resume.pdf
mkdir .config
cd .
mkdir zsh
cd zsh/
vi .zshrc
rm -rf ~/nvim-linux64.tar.gz
sudo apt install unzip tree tmux snap curl ripgrep htop gzip fzf fd-find build-essential
sudo apt install unzip tree tmux curl htop fzf fd-find build-essential
sudo apt install unzip tmux curl htop fzf fd-find build-essential
sudo apt install && sudo apt update
sudo apt install unzip tmux curl htop build-essential
curl -LO https://github.com/neovim/neovim/releases/latest/download/nvim-linux64.tar.gz
file nvim-linux64.tar.gz
which tar
sudo tar -C /opt -xzf nvim-linux64.tar.gz
rm nvim-linux-x86_64.tar.gz nvim-linux64.tar.gz 
curl -LO https://github.com/neovim/neovim/releases/latest/download/nvim-linux-x86_64.tar.gz
sudo rm -rf /opt/nvim
sudo tar -C /opt -xzf nvim-linux-x86_64.tar.gz 
sudo mv /opt/nvim-linux64 /opt/nvim
cd opt/
sudo mv /opt/nvim-linux-x86_64 /opt/nvim
rm nvim-linux-x86_64.tar.gz 
git clone https://github.com/AshuNotes/dotfiles.git
cp ~/dotfiles/.config/nvim ~/.config/
cp ~/dotfiles/.config/nvim ~/.config/ -r
sudo apt install zsh
sudo chsh -s $(which zsh)
cp ~/dotfiles/zsh ~/.config/
cd dotfiles/
cp ~/dotfiles/.config/zsh ~/.config
cp ~/dotfiles/.config/zsh ~/.config -r
rm ~/.zshrc
ln -s ~/.config/zsh/.zshrc ~/.zshrc
rm -f ~/.zhistory
ln -s ~/.config/zsh/.zhistory ~/.zhistory
zsh
so\

git commit -m "made changes"
git credential-manager --version
rm temp
cd temp -p
git clone https://github.com/craftzdog/dotfiles-public.git.
git clone https://github.com/craftzdog/dotfiles-public.git .
udpate
sudo apt-get install fish
chsh -s /bin/fish
sudo apt remove fish
udapte
hoem
sudo apt upgrade && sudo apt update -y
apt list --upgradable
rm -rf ~/.config/nvim ~/.local/{share,state}/nvim ~/.cache/nvim 
git clone https://github.com/lazyvim/starter ~/.config/nvim
rm -rf .git
git commit -m "added lazyvim plugin"
git push 
vi gitPass
rm nvim
cp old_nvim.bak nvim -rf
cd lua/
rm -rf plugins
code .
mv nvim-linux-x86_64 nvim
sudo mv nvim /opt
mv nvim neovim
echo 'export PATH="/opt/neovim/bin:$PATH"' | sudo tee /etc/profile.d/neovim.sh
sudo chmod +x /etc/profile.d/neovim.sh
whcih nvim
snap uninstall nvim
snap help
snap remove nvim
sudo snap remove nvim
cd /etc/profile.d
neovim.sh
neovim
sudo rm /etc/profile.d/neovim.sh
source /etc/profile
cd /usr/bin
\:q
cd ~!
open init.lua
view init.lua
cat init.lua
cat lua/config/options.lua
cd lua/co
vi .
rm lazy.lua
rm -rf lua
cd old_nvim.bak
cd lua/config
cp | cat options.lua
vi options.lua
mkdir lua
mkdir config
vi config
cd config
cp old_nvim.bak/lua/config/{options.lua,keymaps.lua} nvim/lua/config
cd nvim/lua/config
nvim options.lua
nvim keymaps.lua
sudo ln -s /opt/neovim/bin/nvim /usr/local/bin/nvim
which nvim
unlink /opt/neovim/bin/nvim
cd /opt
cd neovim/bin
wget https://github.com/neovim/neovim/releases/download/v0.11.4/nvim-linux-x86_64.tar.gz
rm /opt/neovim
!
where nvim
unlink /usr/local/bin/nvim
sudo unlink /usr/local/bin/nvim
rm init.lua lazy-lock.json lua -rf
vi init.lua
opt.signcolumn = "yes" -- always show the sign column to prevent text shifting
sudo apt install ffpeg
cd /mnt/c/Users/asish/Downloads/3319303515_VSTHEMES-ORG
ffmpeg -i Red-Samurai-4K.mp4 -ss 00:00:08 -frames:v 1 output.png
where config
ealias
vi lua/plugins/treesitter.lua
cp old_nvim.bak nvim
cp old_nvim.bak nvim -r
jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj
cp nvim.bak nvim -rf
cat git
rm .vscode-server .zcompdump .wget-hsts .viminfo .something .lesshst -rf
rm .zhistory .bash_history 
config
nvim ~
ga
gc "configured neovim (
gc "configured neovim (\!lsp)"
gp
nvim nvim
nvim .zshrc
where python3
sudo apt install ffmpeg
sudo apt remove ffmpeg
nvim m
cd CollegeGrade
nvim main.py
sudo rm -rf /opt/neovim
wget https://github.com/neovim/neovim/releases/latest/download/nvim-linux64.tar.gz
wget https://github.com/neovim/neovim/releases/latest/download/nvim-linux-x86_64.tar.gz
tar xzvf nvim-linux-x86_64.tar.gz
mv nvim-linux-x86_64 neovim
mv neovim /opt
sudo mv neovim /opt
szh
c:q
cd b:q
cd ...
cd ~/
rm -rf *
rm images -rf ISSUE_TEMPLATE.md README.md
rm lua/plugins/nvim-cmp.lua
rm lua/plugins/lsp -rf
rm -rf ~/.local/{share,state}/nvim ~/.cache/nvim 
vi lua/config/lazy.lua
~/.local/share/nvim/mason/bin/lua-language-server --version
mkdir lua/lsp
rm -rf lua/lsp
mkdir lua/plugins/lsp
cd lua/plugins/lsp
tree .
cd .local/share/nvim/mason/bin
lua-language-server
nvimm .
gc "modified colorscheme"
vi lua/config/options.lua
rm so
cd ~/projects/fullstack-mern/Auth/d
nvim ,
python3
rm tailwindcss.lua
npm install -g typescript
lsa
nvim .'
mkdir lab/dva -p
cd lab/dva
sudo apt remove python3
sudo apt install python3.14
sudo apt install python3
python3 -V
pip
python3 -m ensurepip --upgrade
sudo apt install python3-pip -y
pip -V
sourec venv/bin/activate
pip install pandas matplotlib seabornd
pip install pandas matplotlib seaborn
python3 main.py
activate

cd projects/python
source playground/venv/bin/activate
pip install aiohttp
pip install bs4
python3 CollegeGrade/main.py
ping rvrjcce.ac.in
nvim CollegeGrade/main.py
cd ~/projects/fullstack-mern
mkdir check 
mkdir backend
npm i express jsonwebtoken bcryptjs cookie-parser nodemon mongoose
tree
nvim --startuptime startup.logf
rm startup.logf
cd nvim | nvim .
cat gitPass
git commit -m "fuck what have i done"
exit
l
lllllll
mv * ../../chatbot-dev/ -p
mkdir chatbot-dev
mv chatbot/frontend/* chatbot-dev -r
mv chatbot/frontend/* chatbot-dev/ -r
mv chatbot/frontend/* chatbot-dev/
ls chatbot-dev
cd projects/frontend
rm .env
cp * ../chatbot/frontend
cp * ../chatbot/frontend/ -r
cd projects/frontend/chatbot
cd chatbot-dev
cat ../chatbot/backend/.env
cd ../chatbot/backend/.env
cd ../chatbot/backend/
echo "VITE_API_KEY=AIzaSyDSbSRt2bH-1y2Q2nmIkxKYVrEiEDoaOg8" > .env
cat .env
cp ../chatbot/backend/server.js sample.js
cat sample.js
rm startup.log
mv lua/plugins/colorscheme.lua ...
find colorscheme.lua
find color
find "color"
cd ls
rm matplotlib -r
find / --name "colorscheme.lua"
find / -name "colorscheme.lua"
find ~/ -name "colorscheme.lua"
cd temp/.config/nvim/lua/plugins
cat treesitter.lua
cat colorscheme.lua
nvim --startuptime startup.log
nvim startup.log
git restore .
cd plugins/lsp
rm * -rf
chsh -s /bin/bash
love
nvim .llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll
nvim .config/nvim
tmux
d
tmux -V
tmux new -s Session
tmux x
tmux d
tmux detach
cat ~/.tmux.conf
mv tmux.conf .tmux.conf
rm .tmux.conf
sudo apt remove tmux
which make
rm temp -rf
mkdir temp
git clone https://github.com/tmux/tmux.git
cd tmux
sh autogen.sh
./configure && make
sudo make install
rm tmux -rf 
sudo apt update\
sudo apt install -y build-essential libevent-dev ncurses-dev bison pkg-config git\

git clone -b 3.5 https://github.com/tmux/tmux.git\
cd tmux\

sh autogen.sh\
./configure\
make\
sudo make install\

which tmux
rm -rf temp/tmux 
touch .tmux.conf
ls -s .tmux.conf ~/.tmux.conf
ll .tmux.conf -h
ll .tmux.conf
ls -l .tmux.conf
find / -type l -lname '~/.config/tmux/.tmux.conf' 2>/dev/null
find / -type l -lname '/home/ashunotes/.tmux.conf' 2>/dev/null
find ~ -type l -exec ls -l {} \;
rm ~/.config/tmux/.tmux.conf
touch ~/.config/tmux/.tmux.conf
chmod 600 ~/.tmux.conf
q
cd~
cd dev
cd net
cat nul
cat null
cat sda
sudo cat sda
celar
cd wsl
cd wslg
cd ProgramData
cd PlayGround/
cd Projects
cd NewsAggregator
npm run dve
cd /mnt/c/PlayGround/Projects/NewsAggregator
cd projects/frontend/newsAggregator
kk
npm clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm
tmux ls
ls .config/tmux/plugins/tpm
cd ashunotes
ls media
ls mnt
cd check
cd check/backend/
...
rm vite-project -rf
rm package-lock.json
clea
npm craete vite@latest
cd l
sudo apt install java
sudo apt update && sudo apt upgrade -y
ja
jaav
sudo systemctl disable --now snapd.socket snapd.service snapd.seeded.service
sudo apt remove --purge snapd -y
sudo rm -rf ~/snap /snap /var/snap /var/lib/snapd
cd projects/frontend/chatbot-dev
mkdir intern
cp projects/frontend/chatbot-dev intern -rf
cp /mnt/c/PlayGround/Projects/Portfolio intern -rf
mv intern/chatbot-dev intern/chatbot
cp /mnt/c/PlayGround/Projects/groceryecom intern -rf
a
source ~/.tmux.conf
tmux kill-session code
cd intern/groceryecom
npm rund ev
nvimm.
npm run de
rm intern/Portfolio -rf
cp /mnt/c/PlayGround/Projects/Portfolio intern -r
cd intern/Portfolio
rm node_modules package-lock.json -rf
rm -rf node_modules package-lock.json
rm -rf node_modules/.vite
npm install
cd intern/
cp chatbot /mnt/c/PlayGround/Projects/temp
rm -rf node_modules
jfdk
systemctl start
systemctl list
systemctl list-jobs
systemctl start ssh
wsl --list
cd temp
touch server.js
nvim server.js
npm init 
npm i express
node server.js
vi ~/.config/.aliases
find ~ -type l -lname '/home/ashunotes/.tmux.conf'
sudo apt add-repository ppa:fish-shell/release-3
git clone https://github.com/fish-shell/fish-shell.git
cd fish-shell
sudo apt-get install git cmake build-essential
cmake .
 rm fish-shell -rf
sudo apt install software-properties-common
sudo apt remove cmake
sudo apt-add-repository ppa:fish-shell/release-3
sudo apt install fish
fish -V
fish --version
which fish
chsh -s /usr/bin/fish
sudo apt purge fish
udo apt-add-repository --remove ppa:fish-shell/release-3
sudo apt-add-repository --remove ppa:fish-shell/release-3
sudo apt update
sudo apt autoremove
ffmpeg -i Red-Samurai-4K.mp4 -ss 00:00:08 -frames:v 1 -vf scale=1920:1080 output.png
cd .config/
rm fish -rf
ga .
rm dotfiles -rf
git submodule update --init --recursive
git config submodule.recurse true
cat .gitmodules
sudo mount -t drvfs D: .
ls usb
cd usb
ls .
sudo umount usb
cd zsh
rm zsh-autosuggestions -rf
rm zsh-history-substring-search -rf
rm zsh-syntax-highlighting -rf
git clone https://github.com/zsh-users/zsh-autosuggestions.git 
cd zsh-autosuggestions
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git
git clone https://github.com/zsh-users/zsh-history-substring-search.git
https://github.com/zsh-users/zsh-history-substring-search.githttps://github.com/zsh-users/zsh-history-substring-search.githttps://github.com/zsh-users/zsh-history-substring-search.githttps://github.com/zsh-users/zsh-history-substring-search.githttps://github.com/zsh-users/zsh-history-substring-search.githttps://github.com/zsh-users/zsh-history-substring-search.githttps://github.com/zsh-users/zsh-history-substring-search.githttps://github.com/zsh-users/zsh-history-substring-search.githttps://github.com/zsh-users/zsh-history-substring-search.githttps://github.com/zsh-users/zsh-history-substring-search.githttps://github.com/zsh-users/zsh-history-substring-search.githttps://github.com/zsh-users/zsh-history-substring-search.githttps://github.com/zsh-users/zsh-history-substring-search.githttps://github.com/zsh-users/zsh-history-substring-search.githttps://github.com/zsh-users/zsh-history-substring-search.git
https://github.com/zsh-users/zsh-history-substring-search.git
https://github.com/zsh-users/zsh-history-substring-search.git;5Bhttps://github.com/zsh-users/zsh-history-substring-search.gi
git config --global user.email "asishathota@gmail.com"
git config --global user.email "asishathota@gmail.com
ffmpeg -i Red-Samurai-4K.mp4 -ss 00:00:08 -frames:v 1 -vf sca
git config --global init.defaultBranch main
git init
git remote -v
gi
cd mnt
cd c
ll -h
ls -lh
nvim ~/.config/.aliases
help ls
sudo apt install man
man ls
cd f
ls -l
ls -h
find ~ -name "intern"
mkdir test
ln -s /mnt/c/PlayGround/__DSA_gfg ~/test/ 
cd __DSA_gfg
cat "Striver's A2Z DSA Sheet.txt"
cd /mnt
cd /
cp cd src
cd src
cp App.jsx ~/test
nvim App.jsx
systemctl ssh enable
systemctl ssh start
sudo apt install openssh-server
sudo systemctl start ssh
sudo systemctl status ssh
ip addr
whoami
sudo apt install tmux
h
tm nvim-linux-x86_64.tar.gz
rm nvim-linux-x86_64.tar.gz
ln -s .tmux.conf ~/.tmux.conf
rm ~/.tmux.conf
ln -s ~/.config/tmux/.tmux.conf ~/.tmux.conf
cd .config/tmux/plugins/tpm
rm tpm
rm tpm -rf
tmux source-file ~/.tmux.conf
nvim ~/.tmux.conf
vi ~/.tmux.conf
nvm
node
nvm ls
nvm -V
nvm ls-remote
nvm install 22.20.0
la ~
cd .t
cat ~/.tmux
mv ~/.tmux/plugins/* plugins -rf
rm plugins
mv ~/.tmux/plugins/* plugins 
rm plugins -rf
rm ~/.tmux -rf
nvm install node
node -V
node --version
sudo apt install default-jdk
java
javac
cd 2.\ Arrays
java LeaderInAnArray.java
javac MajorityElement.java
java MajorityElement
nvim tmux.conf
nvim .tmux.conf
cd .config/tmux
git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm
tmux new -s code
tmux kill-session
tmux new -s auth
rm *
rm public src -rf
rm .gitignore
cat lsp.log
gm 
home
cat ~/.config/.aliases
gs
gc "initialized frontend-react"
nvim ~/.local/state/nvim/lsp.log
cd test
unlink __DSA_gfg
rm App.jsx
git clone https://github.com/dracula/terminal-app.git
vi Dracula.terminal
cd terminal-app
cd learn_dsa
cd ~/test
nvim test.pyt
nvim test.py
mv test.py ~/projects/python
cd ~/projects
cd python
python venv venv
python3 venv venv
sudo apt install python3-venv
python3 -m venv venv
source venv/bin/activate
pip install matplotlib
pip install skimage
pip install scikit-image
pip install sklearn
pip install scikit-learn
python3 test.py
cd 
LS
mv ~/.config/nvim ~/.config/nvim.cfk
mv ~/.config/nvim.cfk ~/.config/nvim
nvim.
deactivate
ezsh
nvim ~/.zshrc
cat lua/plugins/colorscheme.lua
cat -v
pwd
lls
cd intern
cd ~/.local/state/nvim/
nvim lsp.log
npm i react-icons
npm i tailwindcss @tailwindcss/vite
sudo apt update\
sudo apt install wget unzip -y\
wget https://github.com/equalsraf/win32yank/releases/download/v0.1.1/win32yank-x64.zip\
unzip win32yank-x64.zip -d ~/.local/bin\
chmod +x ~/.local/bin/win32yank.exe
vi ~/.zshrc
source ~/.zshrc
win32yank.exe -?
win32yank.exe -V
10;rgb:d3d3/d7d7/cfcf
cd projects/intern/chatbot
nv 
ls ~/.local/share/nvim/lazy/lazy.nvim
npm install -g neovim
cp lua/lazy.lua lua/config
rm lua/lazy.lua
rm ~/.cache/nvim
cd .local/share/nvim
cd .local/state
cd .cache
rm nvim -rf matplotlib 
cd fullstack -p
mkdir fullstack
cd fullstack
mkdir auth
cd auth
mv auth Auth
cd a
cd Auth
nvim ..
npm init -y
npm install express jsonwebtoken nodemon mongoose cookie-parser bcryptjs
npm i cors
cd .c
cd projects
cd fullstack/Auth
tmux attach
tmux new -s chat
npm i dotenv
npm run dev
npm create vite@latest
nvim ~/.config/nvim
nvim ~/test/
nvim ~/.config/nvim 
nv
cd projects/fullstack-mern/Auth
cd intern/chatbot
cp ~/projects/frontend/newsAggregator /mnt/c/playGround/_projects/temp
cp ~/projects/frontend/newsAggregator /mnt/c/playGround/_projects/temp -r
cd projects/intern
cp chatbot /mnt/c/PlayGround/Projects/temp -r
cd chatbot
rm node_modules -rf
cp chatbot /mnt/c/playGround/_projects/temp -rf
nvim 
cd fullstack-mern/Auth
nvim ~/projects/fullstack-mern/Auth
nvi 
git remote add origin https://github.com/asishathota/dotfiles.git
git commit -m "added nvim-mini/mini.indentscope"
git help config
git config --global user.email "asishathota@gmail.com\
"
git config --global user.name "asish"
git push --help
git push -f origin main
clear
time nvim --headless +q
cd ~/projects/fullstack/Auth
cd lua/plugins
git status
rm old_nvim.bak nvim.bak -rf
rm ~/.local/{state, share}/nvim -rf
git commit -m "nvim -> nvim.bak"
git push --ser-upstream origin main
vi ~/gitPass
nvim ~/gitPass
git push -u origin main
rm -rf ~/.config/nvim/.git
nvim
update
sudo apt install build-essentials
sudo apt install build-essential
npm install -g tree-sitter-cli
cd share
cd state
cd shada
cd lazy
cd lazyVim
cd LazyVim
cd extras
..
rm -rf ~/.local/{share, state}/nvim ~/.cache/nvim 
rm -f ~/.local/share/nvim ~/.local/state/nvim
cd ~/.local/share/nvim
cd lazy/LazyVim
\:qa
cat lazyvim.json
sudo apt install tree
tree ../nvim.bak/
cd ~/.local/share/nvim/lazy/LazyVim
cd lua
cd lazyvim
cd plugins
la
ll
cd lsp
cd ~
mv ~/.local/share/nvim{,.bak}
cd .config
mv nvim.bak nvim 
rm -f ~/.local/share/nvim ~/.local/state/nvim -rf
nvim . 
szsh
cd nvim
nvim .aliases
rm ~/.cache/nvim -rf
rm package.json package-lock.json node_modules
rm package.json package-lock.json node_modules -rf
cd frontend
npm install eslint
nvim. 
cd backend
npm i
npm i eslint
cd ..
git add .
git commit -m "reconfigured neovim"
cat ~/gitPass
git push
ls
mv nvim nvim.bak
mv lazyNVIM.bak nvim
rm nvim -rf
git clone https://github.com/LazyVim/starter ~/.config/nvim
cd nvim 
rm .git -rf
rm lua/plugins/*
cd .config/nvim
nvim lua/config/lazy.lua
rm lua/plugins/* -rf
ls lua/plugins
cd ~/projects/fullstack-mern/Auth
cd ~/.config
mv nvim lazyNVIM.bak
mv nvim.bak nvim
rm ~/.local/share/nvim -rf ~/.local/state/nvim ~/.cache/nvim
cd -
cd ~/.config/nvim
n
nvim .
: 1761479595:0;clear
: 1761479671:0;nvim .
: 1761482312:0;nvim.
: 1761482314:0;nvim .
: 1761482457:0;cd ~/projects/fullstack-mern/Auth
: 1761482458:0;nvim .
: 1761482890:0;cd -
: 1761482894:0;cd ~/.config
: 1761482901:0;ga .
: 1761482916:0;gc "configured blink-cmp"
: 1761482921:0;cat ~/gitPass
: 1761482924:0;git push
: 1761482950:0;gs
: 1761483503:0;cd nvim
: 1761483508:0;n
: 1761483713:0;nvim .
: 1761485983:0;nvim
: 1761486116:0;nvim 
: 1761486158:0;nvim .
: 1761487622:0;cd ~/projects/fullstack-mern/Auth
: 1761487624:0;nvim .
: 1761488698:0;cd -
: 1761488701:0;nvim .
: 1761491261:0;nvim
: 1761491509:0;nvim 
: 1761491656:0;nvim .
: 1761491830:0;ls ~/.local/share/nvim/lazy/blink.cmp/build.rs 
: 1761491834:0;ls ~/.local/share/nvim/lazy/blink.cmp/
: 1761491840:0;nvim .
: 1761491895:0;time nvim --headless +q
: 1761492009:0;lazygit
: 1761492028:0;cat ~/gitPass
: 1761492031:0;ga .
: 1761492033:0;cd ..
: 1761492035:0;ga .
: 1761492043:0;gc "added some functionality"
: 1761492050:0;git push
: 1761492310:0;cd nvim
: 1761492312:0;nvim .
: 1761494811:0;cd projects
: 1761494817:0;cd fullstack-mern/Auth
: 1761494818:0;nvim .
: 1761494993:0;cd projects/fullstack-mern/Auth
: 1761494996:0;nvim .
: 1761563367:0;cleaar
: 1761563370:0;clear
: 1761563371:0;ls
: 1761563386:0;cd .config/
: 1761563387:0;ls
: 1761563404:0;mv nvim myNVIM.bak
: 1761563421:0;rm ~/.local/share/nvim -rf ~/.local/state/nvim ~/.cache/nvim
: 1761563435:0;git clone https://github.com/LazyVim/starter ~/.config/nvim
: 1761563442:0;cd nvim 
: 1761563446:0;n
: 1761563529:0;nvim .
: 1761563740:0;tmux new -s neovim
: 1761563753:0;cd ..
: 1761563757:0;cd myNVIM.bak
: 1761563761:0;n
: 1761563766:0;nvim .
: 1761564588:0;n
: 1761565021:0;update
: 1761565030:0;apt install cmake g++ pkg-config libfontconfig1-dev libxcb-xfixes0-dev libxkbcommon-dev python3
: 1761565039:0;sudo apt install cmake g++ pkg-config libfontconfig1-dev libxcb-xfixes0-dev libxkbcommon-dev python3
: 1761565124:0;git clone https://github.com/alacritty/alacritty.git
: 1761565144:0;cd alacritty
: 1761565163:0;cargo --version
: 1761565168:0;curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
: 1761565324:0;rustup override set stable
: 1761565357:0;nvim ~/.zshrc
: 1761565373:0;szsh
: 1761565377:0;rustup override set stable
: 1761565385:0;rustup update stable
: 1761565398:0;apt install cmake g++ pkg-config libfontconfig1-dev libxcb-xfixes0-dev libxkbcommon-dev python3
: 1761565401:0;sudo apt install cmake g++ pkg-config libfontconfig1-dev libxcb-xfixes0-dev libxkbcommon-dev python3
: 1761565428:0;cargo build --release
: 1761565544:0;sudo cp target/release/alacritty /usr/local/bin
: 1761565564:0;nvim ~/.zshrc
: 1761565581:0;cp extra/completions/_alacritty ${ZDOTDIR:-~}/.zsh_functions/_alacritty
: 1761565684:0;${ZDOTDIR:-~}
: 1761565726:0;echo "${ZDOTDIR: -~}"
: 1761565737:0;echo "${ZDOTDIR}"
: 1761565753:0;szsh
: 1761565757:0;cp extra/completions/_alacritty ${ZDOTDIR:-~}/.zsh_functions/_alacritty
: 1761565776:0;alacritty
: 1761565864:0;nvim ~/.zshrc
: 1761565875:0;szsh
: 1761566405:0;alacritty
: 1761566408:0;cd
: 1761566410:0;ls
: 1761566413:0;nvim .
: 1761566430:0;rm ~/.local/share/nvim -rf ~/.local/state/nvim ~/.cache/nvim
: 1761566434:0;cd .config
: 1761566435:0;ls
: 1761566444:0;rm nvim -rf
: 1761566457:0;cp myNVIM.bak nvim 
: 1761566461:0;cp myNVIM.bak nvim -rf
: 1761566464:0;nvim .
: 1761566568:0;sudo apt remove alacritty
: 1761566576:0;cd ..
: 1761566577:0;ls
: 1761566578:0;cd alacritty
: 1761566579:0;ls
: 1761566581:0;cd ..
: 1761566587:0;rm alacritty -rm
: 1761566595:0;rm alacritty -rf
: 1761566597:0;ls
: 1761566605:0;which alacritty
: 1761566610:0;alacritty
: 1761566623:0;nvim .zshr
: 1761566629:0;nvim .zshrc
: 1761566645:0;ls
: 1761566647:0;la
: 1761566670:0;rm .zsh_functions -rf
: 1761566678:0;ls
: 1761566681:0;la
: 1761566682:0;ll
: 1761566705:0;szh
: 1761566708:0;szsh
: 1761566713:0;which alacritty
: 1761566733:0;cat /usr/local/bin/alacritty
: 1761566746:0;rm /usr/local/bin/alacritty -rf
: 1761566765:0;sudo rm /usr/local/bin/alacritty -rf
: 1761566769:0;which alacritty
: 1761571063:0;cd .config
: 1761571064:0;l
: 1761571065:0;sls
: 1761571066:0;ls
: 1761571068:0;cd nvim
: 1761571070:0;n
: 1761571410:0;nvim
: 1761571414:0;n
: 1761572218:0;nvim
: 1761572227:0;nvim .
: 1761574195:0;sudo apt-cache search neovide
: 1761574207:0;apt-cache search neovide
: 1761574215:0;sudo apt install neovide
: 1761574273:0;cargo install --git https://github.com/neovide/neovide
: 1761574892:0;cd ~/.cargo
: 1761574893:0;ls
: 1761574896:0;cd bin
: 1761574896:0;ls
: 1761574909:0;rm neovide -rf
: 1761574920:0;cd ~
: 1761574921:0;ls
: 1761574932:0;cd .config/nvim
: 1761574934:0;n
: 1761575077:0;cd ~/projects/fullstack-mern/Auth
: 1761575079:0;nvim .
: 1761575137:0;cd -
: 1761575139:0;nvim .
: 1761576116:0;cat /home/ashu/.local/state/nvim/lsp.log
: 1761576124:0;cat -help
: 1761576129:0;cat --help
: 1761576171:0;cat /home/ashu/.local/state/nvim/lsp.log
: 1761576176:0;nvim /home/ashu/.local/state/nvim/lsp.log
: 1761576245:0;clear
: 1761576248:0;nvim .
: 1761577109:0;n
: 1761577326:0;nvim ,
: 1761577331:0;nvim .
: 1761577692:0;rm ~/.local/share/nvim -rf ~/.local/state/nvim ~/.cache/nvim
: 1761577705:0;nvim .
: 1761578141:0;nv 
: 1761578143:0;nvim .
: 1761579388:0;n
: 1761579552:0;ls
: 1761579554:0;nvim .
: 1761580480:0;n
: 1761580556:0;nvim .
: 1761580599:0;nvim /home/ashu/.local/state/nvim/conform.log
: 1761580608:0;nvim .
: 1761581269:0;cd ..
: 1761581275:0;git add .
